import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// import { createContext } from "react"; // it will only work in client component

// now import the theme provider code
import { ThemeProvider } from "@/components/theme-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// type Theme = {
//   colors: {
//     primary: string;
//     secondary: string;
//   }
// }

// const defaultTheme: Theme = {
//   colors: {
//     primary: "#007bff",
//     secondary: "#6c757d"
//   }
// }

// const ThemeContext = createContext<Theme>(defaultTheme);

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      {/* <ThemeContext.Provider value={defaultTheme}> */}
      <ThemeProvider>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
      {/* </ThemeContext.Provider> */}
      </ThemeProvider>
    </html>
  );
}
